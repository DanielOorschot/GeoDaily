{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\QuizProject\\\\GeoDaily\\\\QuizProjectFrontend\\\\src\\\\CountryLine.tsx\";\nimport { BsFillArrowUpSquareFill, BsFillArrowDownSquareFill } from \"react-icons/bs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar populationLine;\nconst CountryLine = _ref => {\n  let {\n    guessInfo,\n    correctInfo\n  } = _ref;\n  if (guessInfo.population > correctInfo.population) {\n    populationLine = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [guessInfo.population, /*#__PURE__*/_jsxDEV(BsFillArrowDownSquareFill, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 53\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 26\n    }, this);\n  } else if (guessInfo.population < correctInfo.population) {\n    populationLine = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [guessInfo.population, /*#__PURE__*/_jsxDEV(BsFillArrowUpSquareFill, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 53\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 26\n    }, this);\n  } else {\n    populationLine = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: guessInfo.population\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 26\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: guessInfo.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: guessInfo.continent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: populationLine\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: guessInfo.landArea\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_c = CountryLine;\nexport default CountryLine;\nvar _c;\n$RefreshReg$(_c, \"CountryLine\");","map":{"version":3,"names":["BsFillArrowUpSquareFill","BsFillArrowDownSquareFill","jsxDEV","_jsxDEV","populationLine","CountryLine","_ref","guessInfo","correctInfo","population","children","fileName","_jsxFileName","lineNumber","columnNumber","name","continent","landArea","_c","$RefreshReg$"],"sources":["C:/Users/Daniel/Desktop/QuizProject/GeoDaily/QuizProjectFrontend/src/CountryLine.tsx"],"sourcesContent":["import { ReactFragment } from \"react\";\r\nimport { JSX } from \"react/jsx-runtime\";\r\nimport { Country } from \"./helpers/TypeInterfaces\"\r\nimport { BsFillArrowUpSquareFill, BsFillArrowDownSquareFill } from \"react-icons/bs\";\r\n\r\ninterface CountryLineProps {\r\n    guessInfo: Country;\r\n    correctInfo: Country;\r\n}\r\n\r\nvar populationLine: string | number | boolean | JSX.Element | ReactFragment | null | undefined;\r\n\r\nconst CountryLine = ({ guessInfo, correctInfo }: CountryLineProps) => {\r\n\r\n    if (guessInfo.population > correctInfo.population) {\r\n        populationLine = <div>{guessInfo.population}<BsFillArrowDownSquareFill/></div>;\r\n    }\r\n    else if (guessInfo.population < correctInfo.population) {\r\n        populationLine = <div>{guessInfo.population}<BsFillArrowUpSquareFill/></div>;\r\n    }\r\n    else {\r\n        populationLine = <div>{guessInfo.population}</div>;\r\n    }\r\n    return (\r\n        <tr>\r\n            <td>\r\n                {guessInfo.name}\r\n            </td>\r\n            <td>\r\n                {guessInfo.continent}\r\n            </td>\r\n            <td>\r\n                {populationLine}\r\n            </td>\r\n            <td>\r\n                {guessInfo.landArea}\r\n            </td>\r\n        </tr>\r\n    )\r\n};\r\n\r\nexport default CountryLine;"],"mappings":";AAGA,SAASA,uBAAuB,EAAEC,yBAAyB,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOpF,IAAIC,cAA0F;AAE9F,MAAMC,WAAW,GAAGC,IAAA,IAAkD;EAAA,IAAjD;IAAEC,SAAS;IAAEC;EAA8B,CAAC,GAAAF,IAAA;EAE7D,IAAIC,SAAS,CAACE,UAAU,GAAGD,WAAW,CAACC,UAAU,EAAE;IAC/CL,cAAc,gBAAGD,OAAA;MAAAO,QAAA,GAAMH,SAAS,CAACE,UAAU,eAACN,OAAA,CAACF,yBAAyB;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAClF,CAAC,MACI,IAAIP,SAAS,CAACE,UAAU,GAAGD,WAAW,CAACC,UAAU,EAAE;IACpDL,cAAc,gBAAGD,OAAA;MAAAO,QAAA,GAAMH,SAAS,CAACE,UAAU,eAACN,OAAA,CAACH,uBAAuB;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChF,CAAC,MACI;IACDV,cAAc,gBAAGD,OAAA;MAAAO,QAAA,EAAMH,SAAS,CAACE;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EACtD;EACA,oBACIX,OAAA;IAAAO,QAAA,gBACIP,OAAA;MAAAO,QAAA,EACKH,SAAS,CAACQ;IAAI;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC,eACLX,OAAA;MAAAO,QAAA,EACKH,SAAS,CAACS;IAAS;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,eACLX,OAAA;MAAAO,QAAA,EACKN;IAAc;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC,eACLX,OAAA;MAAAO,QAAA,EACKH,SAAS,CAACU;IAAQ;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEb,CAAC;AAACI,EAAA,GA3BIb,WAAW;AA6BjB,eAAeA,WAAW;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}