{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\QuizProject\\\\GeoDaily\\\\QuizProjectFrontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport countryJson from './countrydata.json';\nimport CountryLine from './CountryLine';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const dateObj = new Date();\n  let date = new Date().toUTCString().slice(5, 16);\n  var todaysSeed = require('random-seed').create();\n  todaysSeed.seed(date);\n  var todaysNumber = todaysSeed(countryJson.length);\n  const [countryData, setCountryData] = useState(countryJson);\n  const blankCountry = {\n    name: '',\n    continent: '',\n    population: 0,\n    landArea: 0\n  };\n  const [guess, setGuess] = useState('');\n  const [guessData, setGuessData] = useState([blankCountry]);\n  const makeGuess = g => {\n    const found = countryData.find(_ref => {\n      let {\n        name\n      } = _ref;\n      return name === g;\n    });\n    if (found) {\n      setGuessData([...guessData, found]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: countryData[todaysNumber].name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Guess:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: e => setGuess(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => makeGuess(guess),\n            children: \"Make Guess\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Continent\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Population\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Land Area\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: guessData.slice(1).map((item, i) => /*#__PURE__*/_jsxDEV(CountryLine, {\n              guessInfo: item,\n              correctInfo: countryData[todaysNumber]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 51\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"SoLhKoSWqFbfHZzb8cz0K9m71e8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","countryJson","CountryLine","jsxDEV","_jsxDEV","App","_s","dateObj","Date","date","toUTCString","slice","todaysSeed","require","create","seed","todaysNumber","length","countryData","setCountryData","blankCountry","name","continent","population","landArea","guess","setGuess","guessData","setGuessData","makeGuess","g","found","find","_ref","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","onClick","map","item","i","guessInfo","correctInfo","_c","$RefreshReg$"],"sources":["C:/Users/Daniel/Desktop/QuizProject/GeoDaily/QuizProjectFrontend/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport countryJson from './countrydata.json';\nimport { Country } from './helpers/TypeInterfaces';\nimport CountryLine from './CountryLine';\n\nconst App = () => {\n\n  const dateObj = new Date();\n  let date = new Date().toUTCString().slice(5, 16);\n  var todaysSeed = require('random-seed').create();\n  todaysSeed.seed(date);\n  var todaysNumber = todaysSeed(countryJson.length);\n\n  const [countryData, setCountryData] = useState<Country[]>(countryJson);\n\n  const blankCountry: Country = {\n    name: '',\n    continent: '',\n    population: 0,\n    landArea: 0\n  }\n\n  const [guess, setGuess] = useState('');\n\n  const [guessData, setGuessData] = useState([blankCountry]);\n\n  const makeGuess = (g: string) => {\n    const found = countryData.find(({ name }) => name === g);\n    if (found) {\n      setGuessData([...guessData, found]);\n\n    }\n\n  }\n\n\n  return (\n    <body>\n    <div>\n      <div>\n        {countryData[todaysNumber].name}\n      </div>\n\n      <div>\n        <label>\n          Guess:\n          <input\n            onChange={e => setGuess(e.target.value)}\n          />\n          <button onClick={() => makeGuess(guess)}>\n            Make Guess\n          </button>\n        </label>\n      </div>\n      <div>\n        <table>\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Continent</th>\n              <th>Population</th>\n              <th>Land Area</th>\n            </tr>\n          </thead>\n          <tbody>\n            {guessData.slice(1).map((item, i) => (<CountryLine guessInfo={item} correctInfo={countryData[todaysNumber]} />))}\n          </tbody>\n        </table>\n      </div>\n\n    </div>\n    </body>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}