{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\QuizProject\\\\GeoDaily\\\\QuizProjectFrontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport countryJson from './countrydata.json';\nimport CountryLine from './CountryLine';\nimport './App.scss';\nimport Navbar from './Components/Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const dateObj = new Date();\n  let date = new Date().toUTCString().slice(5, 16);\n  var todaysSeed = require('random-seed').create();\n  todaysSeed.seed(date);\n  var todaysNumber = todaysSeed(countryJson.length);\n  const [countryData, setCountryData] = useState(countryJson);\n  const blankCountry = {\n    name: '',\n    continent: '',\n    population: 0,\n    landArea: 0,\n    flagColours: []\n  };\n  const [guess, setGuess] = useState('');\n  const [guessData, setGuessData] = useState([blankCountry]);\n  const [isGuessed, setIsGuessed] = useState(false);\n  const makeGuess = g => {\n    const found = countryData.find(_ref => {\n      let {\n        name\n      } = _ref;\n      return name === g;\n    });\n    if (found) {\n      setGuessData([...guessData, found]);\n    }\n    if (g === countryData[todaysNumber].name) {\n      setIsGuessed(true);\n    }\n  };\n  let guessButton;\n  if (isGuessed === false) {\n    guessButton = /*#__PURE__*/_jsxDEV(\"tfoot\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"td\", {\n          colSpan: 5,\n          align: \"center\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Guess:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => setGuess(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => makeGuess(guess),\n              children: \"Make Guess\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 19\n    }, this);\n  } else {\n    guessButton = /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"animatedBackground\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tableContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Continent\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Population\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Land Area\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Flag Colours\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: guessData.slice(1).map((item, i) => /*#__PURE__*/_jsxDEV(CountryLine, {\n                guessInfo: item,\n                correctInfo: countryData[todaysNumber]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 53\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 13\n            }, this), guessButton]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"fp1dKVXeQT9MRzOnBQ/qBdM3SoM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","countryJson","CountryLine","Navbar","jsxDEV","_jsxDEV","App","_s","dateObj","Date","date","toUTCString","slice","todaysSeed","require","create","seed","todaysNumber","length","countryData","setCountryData","blankCountry","name","continent","population","landArea","flagColours","guess","setGuess","guessData","setGuessData","isGuessed","setIsGuessed","makeGuess","g","found","find","_ref","guessButton","children","colSpan","align","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","map","item","i","guessInfo","correctInfo","_c","$RefreshReg$"],"sources":["C:/Users/Daniel/Desktop/QuizProject/GeoDaily/QuizProjectFrontend/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport countryJson from './countrydata.json';\r\nimport { Country } from './helpers/TypeInterfaces';\r\nimport CountryLine from './CountryLine';\r\nimport './App.scss'\r\nimport Navbar from './Components/Navbar';\r\n\r\nconst App = () => {\r\n\r\n  const dateObj = new Date();\r\n  let date = new Date().toUTCString().slice(5, 16);\r\n  var todaysSeed = require('random-seed').create();\r\n  todaysSeed.seed(date);\r\n  var todaysNumber = todaysSeed(countryJson.length);\r\n\r\n  const [countryData, setCountryData] = useState<Country[]>(countryJson);\r\n\r\n  const blankCountry: Country = {\r\n    name: '',\r\n    continent: '',\r\n    population: 0,\r\n    landArea: 0,\r\n    flagColours: []\r\n  }\r\n\r\n  const [guess, setGuess] = useState('');\r\n\r\n  const [guessData, setGuessData] = useState([blankCountry]);\r\n\r\n  const [isGuessed, setIsGuessed] = useState(false);\r\n\r\n  const makeGuess = (g: string) => {\r\n    const found = countryData.find(({ name }) => name === g);\r\n    if (found) {\r\n      setGuessData([...guessData, found]);\r\n\r\n    }\r\n    if (g === countryData[todaysNumber].name) {\r\n      setIsGuessed(true);\r\n    }\r\n\r\n  }\r\n\r\n  let guessButton;\r\n\r\n  if (isGuessed === false) {\r\n    guessButton = <tfoot>\r\n    <tr>\r\n      <td colSpan={5} align='center'><label>\r\n        Guess: \r\n        <input\r\n          onChange={e => setGuess(e.target.value)}\r\n        />\r\n        <button onClick={() => makeGuess(guess)}>\r\n          Make Guess\r\n        </button>\r\n      </label></td>\r\n    </tr>\r\n  </tfoot>\r\n  }\r\n  else {\r\n    guessButton = <div></div>;\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n    <Navbar/>\r\n    <div className='animatedBackground'>\r\n      <div className='center'>\r\n        <div className='tableContainer'>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Continent</th>\r\n                <th>Population</th>\r\n                <th>Land Area</th>\r\n                <th>Flag Colours</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {guessData.slice(1).map((item, i) => (<CountryLine guessInfo={item} correctInfo={countryData[todaysNumber]} />))}\r\n            </tbody>\r\n            {guessButton}\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}